#include <iostream>
using namespace std;


void heapify(int arr[], int n, int i, bool isMaxHeap) {                      // Function to heapify a subtree rooted at index i
    int extreme = i;                                                         // Initialize extreme as root
    int left = 2 * i + 1; // left child
    int right = 2 * i + 2; // right child

    if (isMaxHeap) {                                                             // For Max Heap
        if (left < n && arr[left] > arr[extreme])
            extreme = left;
        if (right < n && arr[right] > arr[extreme])
            extreme = right;
    }
                                                          // For Min Heap
    else {
        if (left < n && arr[left] < arr[extreme])
            extreme = left;
        if (right < n && arr[right] < arr[extreme])
            extreme = right;
    }
                                                               // If extreme is not root
    if (extreme != i) {
        swap(arr[i], arr[extreme]);
        // Recursively heapify the affected sub-tree
        heapify(arr, n, extreme, isMaxHeap);
    }
}
                                                                  // Function to perform heap sort
void heapSort(int arr[], int n, bool isMaxHeap) {
    // Build heap (rearrange array)
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i, isMaxHeap);

    // One by one extract elements from heap
    for (int i = n - 1; i >= 0; i--) {
        // Move current root to end
        swap(arr[0], arr[i]);
        // Call heapify on the reduced heap
        heapify(arr, i, 0, isMaxHeap);
    }
}

// Function to display the array
void displayArray(int arr[], int n) {
    for (int i = 0; i < n; ++i)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int n;
    bool isMaxHeap;
    int choice;

    cout << "Enter the number of elements: ";
    cin >> n;

    int* arr = new int[n]; // Dynamic array allocation

    cout << "Enter " << n << " elements:\n";
    for (int i = 0; i < n; ++i)
        cin >> arr[i];

    cout << "Choose heap type:\n";
    cout << "1. Max Heap (Ascending Order)\n";
    cout << "2. Min Heap (Descending Order)\n";
    cout << "Enter your choice (1 or 2): ";
    cin >> choice;

    if (choice == 1)
        isMaxHeap = true;
    else if (choice == 2)
        isMaxHeap = false;
    else {
        cout << "Invalid choice. Exiting program.\n";
        delete[] arr; // Free allocated memory
        return 1;
    }

    heapSort(arr, n, isMaxHeap);

    cout << "Sorted array:\n";
    displayArray(arr, n);

    delete[] arr; // Free allocated memory
    return 0;
}